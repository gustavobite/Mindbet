package br.com.mindbet.common.cryptography

import android.util.Base64
import kotlin.experimental.xor

object PublicKeyHelper {
	private val composite: Array<ByteArray> by lazy {
		arrayOf(
			byteArrayOf(102, 49, 81, 111, 70, 109, 118, 83, 83, 78, 71, 112, 72, 122, 89, 78, 121, 122, 102, 97, 119, 120, 103, 77, 50, 78, 119, 121, 98, 107, 121, 48, 73, 111, 47, 51, 70, 52, 97, 89, 99, 56, 82, 82, 89, 88, 52, 120, 82, 119, 75, 56, 113, 109, 117, 65, 76, 106, 54, 97, 82, 83, 119, 53, 49, 107, 47, 117, 65, 48, 90, 117, 104, 87, 82, 81, 10, 49, 55, 115, 74, 76, 53, 116, 110, 73, 120, 82, 69, 118, 98, 77, 70, 43, 51, 55, 73, 51, 104, 56, 114, 108, 68, 103, 106, 72, 76, 78, 105, 50, 47, 74, 57, 100, 66, 118, 67, 98, 121, 97, 55, 89, 103, 48, 111, 109, 88, 54, 115, 54, 67, 74, 67, 114, 116, 108, 83, 77, 74, 98, 112, 50, 103, 57, 75, 85, 86, 80, 43, 104, 77, 102, 102, 10, 87, 84, 72, 109, 119, 54, 65, 69, 49, 76, 82, 112, 55, 70, 113, 84, 82, 114, 68, 54, 88, 55, 76, 50, 76, 117, 77, 43, 90, 113, 121, 71, 118, 75, 70, 81, 80, 74, 50, 121, 99, 85, 104, 53, 111, 88, 122, 81, 108, 97, 76, 57, 50, 69, 98, 122, 50, 71, 115, 51, 83, 47, 84, 117, 47, 83, 74, 55, 121, 115, 105, 99, 119, 52, 114, 98, 10, 77, 80, 57, 50, 57, 88, 77, 48, 115, 105, 113, 78, 83, 70, 120, 51, 55, 53, 77, 97, 51, 79, 99, 103, 122, 119, 53, 55, 112, 57, 43, 98, 48, 49, 101, 97, 122, 120, 54, 43, 119, 118, 86, 53, 99, 107, 52, 115, 54, 90, 109, 87, 112, 57, 77, 55, 68, 48, 105, 52, 57, 77, 103, 116, 79, 54, 86, 102, 97, 89, 84, 54, 77, 82, 73, 122, 10, 122, 78, 67, 87, 57, 43, 67, 101, 119, 76, 107, 113, 107, 99, 111, 99, 98, 55, 113, 120, 109, 105, 73, 117, 79, 48, 86, 72, 83, 69, 105, 65, 106, 104, 79, 97, 103, 104, 102, 100, 116, 98, 114, 48, 107, 108, 78, 75, 72, 88, 43, 120, 65, 110, 109, 78, 78, 84, 87, 88, 52, 101, 50, 117, 49, 80, 111, 66, 51, 104, 115, 101, 102, 82, 106, 68, 10, 52, 56, 90, 75, 50, 83, 109, 109, 77, 115, 87, 103, 70, 72, 112, 84, 86, 116, 67, 72, 75, 49, 49, 111, 47, 66, 67, 51, 105, 83, 101, 118, 81, 86, 71, 97, 81, 83, 84, 80, 76, 83, 117, 120, 80, 73, 78, 50, 78, 104, 98, 52, 76, 111, 51, 114, 108, 78, 67, 74, 120, 106, 82, 110, 99, 117, 117, 80, 82, 103, 89, 98, 83, 85, 81, 54, 10, 114, 50, 106, 116, 68, 54, 72, 104, 78, 50, 111, 80, 65, 51, 72, 80, 120, 52, 74, 108, 79, 86, 80, 57, 66, 119, 111, 118, 102, 100, 86, 84, 69, 71, 67, 98, 72, 115, 71, 115, 86, 53, 108, 53, 88, 82, 77, 112, 114, 99, 79, 105, 100, 79, 49, 111, 120, 72, 114, 79, 73, 111, 75, 68, 51, 108, 115, 61, 10),
			byteArrayOf(77, 104, 49, 104, 86, 67, 75, 52, 67, 90, 47, 114, 101, 70, 49, 56, 111, 49, 121, 122, 104, 67, 70, 55, 54, 74, 53, 122, 80, 119, 110, 121, 89, 56, 54, 52, 86, 77, 102, 74, 83, 52, 85, 99, 75, 68, 100, 122, 66, 71, 88, 51, 54, 83, 114, 82, 97, 51, 43, 120, 80, 71, 74, 114, 110, 68, 43, 74, 99, 103, 56, 69, 56, 68, 85, 89, 10, 116, 77, 74, 114, 101, 97, 73, 77, 69, 88, 100, 49, 106, 77, 116, 51, 113, 84, 109, 68, 108, 72, 66, 73, 47, 110, 112, 84, 74, 80, 107, 65, 103, 52, 100, 69, 80, 69, 71, 111, 78, 86, 72, 104, 65, 68, 57, 119, 55, 119, 84, 73, 104, 82, 69, 74, 55, 97, 52, 98, 86, 57, 121, 119, 105, 87, 85, 67, 72, 68, 101, 90, 119, 97, 105, 117, 10, 77, 109, 109, 65, 55, 79, 78, 82, 107, 115, 81, 53, 112, 109, 106, 113, 69, 118, 105, 100, 77, 100, 121, 77, 83, 100, 69, 72, 66, 57, 122, 74, 122, 117, 116, 111, 86, 77, 110, 102, 74, 103, 107, 115, 52, 67, 109, 65, 52, 47, 67, 98, 54, 109, 109, 112, 108, 108, 57, 86, 75, 77, 83, 113, 113, 71, 103, 101, 115, 47, 72, 97, 116, 43, 47, 105, 10, 86, 115, 103, 49, 111, 84, 82, 109, 57, 72, 47, 51, 79, 84, 53, 66, 49, 113, 90, 53, 118, 54, 112, 83, 47, 48, 65, 104, 55, 118, 67, 117, 115, 103, 55, 119, 108, 83, 118, 102, 43, 111, 85, 88, 65, 110, 120, 87, 104, 113, 47, 77, 119, 75, 66, 52, 80, 65, 88, 79, 119, 53, 49, 101, 87, 77, 107, 81, 73, 101, 72, 74, 100, 49, 108, 107, 10, 114, 117, 110, 57, 106, 114, 88, 69, 116, 80, 100, 119, 120, 80, 112, 73, 65, 73, 110, 97, 47, 109, 100, 50, 100, 82, 57, 47, 80, 51, 55, 87, 117, 106, 122, 88, 57, 121, 43, 76, 57, 79, 75, 49, 52, 122, 100, 52, 76, 82, 110, 55, 89, 83, 55, 69, 81, 107, 87, 110, 113, 113, 55, 53, 115, 78, 70, 106, 116, 48, 78, 116, 68, 121, 113, 114, 10, 114, 47, 52, 89, 103, 82, 118, 70, 97, 43, 113, 88, 74, 66, 52, 49, 73, 54, 67, 48, 81, 83, 107, 119, 117, 110, 80, 53, 117, 71, 55, 75, 74, 68, 84, 117, 76, 48, 71, 90, 90, 70, 55, 98, 101, 56, 52, 122, 101, 108, 79, 117, 102, 43, 105, 113, 52, 113, 84, 104, 111, 85, 49, 101, 65, 54, 102, 109, 72, 70, 89, 105, 101, 51, 78, 49, 10, 110, 121, 43, 107, 97, 99, 54, 120, 101, 68, 116, 72, 99, 106, 110, 52, 112, 80, 103, 72, 83, 50, 71, 47, 82, 72, 120, 108, 70, 90, 119, 51, 89, 119, 121, 116, 87, 89, 88, 113, 68, 54, 112, 76, 67, 69, 107, 67, 53, 47, 118, 72, 73, 89, 89, 69, 112, 121, 117, 72, 90, 115, 80, 83, 110, 120, 107, 61, 10)
		)
	}

	val key: ByteArray by lazy {
		val xorParts0 = Base64.decode(composite[0], Base64.DEFAULT)
		val xorParts1 = Base64.decode(composite[1], Base64.DEFAULT)

		val xorKey = ByteArray(xorParts0.size)
		for (i in xorParts1.indices) {
			xorKey[i] = (xorParts0[i] xor xorParts1[i])
		}
		xorKey
	}

	private val compositeSymmetric: Array<ByteArray> by lazy {
		arrayOf(
			byteArrayOf(55, 73, 105, 51, 106, 105, 106, 118, 118, 67, 101, 80, 105, 86, 116, 49, 70, 87, 68, 102, 87, 65, 61, 61),
			byteArrayOf(106, 98, 113, 65, 118, 104, 43, 77, 50, 82, 102, 116, 117, 106, 111, 84, 74, 70, 102, 117, 79, 103, 61, 61))
	}

	val keySymmetric: ByteArray by lazy {
		val xorParts0 = Base64.decode(compositeSymmetric[0], Base64.DEFAULT)
		val xorParts1 = Base64.decode(compositeSymmetric[1], Base64.DEFAULT)

		val xorKey = ByteArray(xorParts0.size)
		for (i in xorParts1.indices) {
			xorKey[i] = (xorParts0[i] xor xorParts1[i])
		}
		xorKey
	}
}